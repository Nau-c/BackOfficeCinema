<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>es.dsw</groupId>
  <artifactId>BackOfficeCinema</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>BackOfficeCinema Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <!-- Propiedades de Maven. Fijese como podemos crear nuestras propias propiedades para minimizar a futuro las modificaciones en este fichero.
       En este caso, se ha añadido la propiedad springsecurity.version y en las dependencias posteriores se ha hecho uso de la notación ${springsecurity.version}
       para conseguir que tres dependencias siempre tomen la misma versión.-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springsecurity.version>5.7.3</springsecurity.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencies>
  	<!-- Dependencia de javax.servlet, imprescindible para la ejecución de los servlets de java-->
	<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>javax.servlet-api</artifactId>
	    <version>4.0.1</version>
	    <scope>provided</scope>
	</dependency> 
	
	<!-- Dependencia de Spring Web MVC-->
	<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-webmvc</artifactId>
	    <version>5.3.22</version>
	</dependency>

	<!-- Dependencia para hacer uso de las Tag Library. En este caso, en el loggin.jsp tiene una muetsra de como incorporar
	     en la vista una estructura condicional IF-->
	<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>jstl</artifactId>
	    <version>1.2</version>
	</dependency>
	
	<!-- Dependencia imprescindible para la ejecución de Spring Security-->
	<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
	<dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-web</artifactId>
	    <version>${springsecurity.version}</version>
	</dependency>

    <!-- Dependencia imprescindible para la configuración de Spring Security. Es importante que la versión de esta dependencia
         sea la misma que la versión de la dependencia anterior spring-security-web.-->
	<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
	<dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-config</artifactId>
	    <version>${springsecurity.version}</version>
	</dependency>

    <!-- Dependencia que solo se utiliza en el Ejemplo 2 para obtener desde una vista datos de autenticación y autentificación.
         Es importante que la versión de esta dependencia sea la misma que la versión de la dependencia anterior spring-security-web.-->
	<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
	<dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-taglibs</artifactId>
	    <version>${springsecurity.version}</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
	<!--Para conectar con cualquier base de datos debes localizar el respectivo conector JDBC. En este caso
	    se añade la dependencia del JDBC de MySql (o MariaDb).-->
	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>8.0.28</version>
	</dependency>
	
	
	
  </dependencies>
  
  
  <!-- Aquí, no se han realizado modificaciones -->
  <build>
    <finalName>BackOfficeCinema</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

